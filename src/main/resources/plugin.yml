name: RedstoneChips
main: org.tal.redstonechips.RedstoneChips
version: 0.9
author: eisental
description: Core RedstoneChips plugin for building integrated redstone circuits.
website: http://eisental.github.com/RedstoneChips
commands:
  rclist:
    description: Prints a list of active chips.
    usage: |
      /rclist [world-name|all|this] [<filter-type>: <arg>,<arg>,<arg>;...]

      The command without any arguments will list all circuits in the current world or, when used from the server console, circuits
      in all worlds.

      Use /rclist all as a player to see a list of all circuits on the server
      Use /rclist <world-name> to list all circuits in a specific world.

      To show only specific kind of circuits you can use a filter. There are several filter types.
      `location: <x>,<y>,<z>,[radius]` - Show only circuits in a radius around the location.
      `location: this, [radius]` - Uses your current location.
      `chunk: <x>,<z>` - Show only circuits in the specified chunk. `chunk: this` will use your current chunk
      `class: <class-name>` - Show only circuits of the specified class. You can use partial class names.
      You can combine different filters by separating them with a semicolon (;). You can also use partial filter type names.

      Examples:
        /rclist this ch: this; cl: pix - List every pixel circuit in your current world and chunk.
        /rclist this loc: this, 10; class: decoder - List every decoder in a 10 block radius around you.
  rcclasses:
    description: Prints a list of installed circuit classes.
    usage: |
      /rcclasses
  rcprefs:
    description: Allows to see and change the plugin's preferences.
    usage: |
      /rcprefs [pref key] [new value]

      Use the command with no arguments to list all preferences values.
      To change a preference value use /rcprefs <pref key> <new value>.
  rcdebug:
    description: Register yourself as a debugger of a chip.
    usage: |
      /rcdebug [chip-id|off|alloff]

      Use by either pointing at the circuit you wish to debug or by using /rcdebug <chip id> if you have admin priviliges.
      
      To stop receiving debug messages from the chip use the same command again or use /rcdebug off or /rcdebug <chip id> off.     
      To stop receiving debug messages from all circuits use /rcdebug alloff.
  rcpin:
    description: Prints information about a chip pin.
    usage: |
      Point towards an output lever or input redstone source to use.
      Prints the pin number (starting with 0), pin type (input/output), and current state (on/off) of the pin.
  rcactivate:
    description: Activates a circuit.
    usage: |
      Point the circuit sign and execute the command.
      To activate a circuit built with different input, output or interface block types then set in the preferences use /rcactivate <inputBlockType> <outputBlockType> <interfaceBlockType> .
  rcdestroy:
    description: Destroys a circuit and removes its blocks.
    usage: |
      Point at a block of the circuit you wish to destroy and enter the command.
      This command is disabled by default. To enable it use /rcprefs enableDestroyCommand true.
  rcbreak:
    description: Deactivates a circuit without removing its blocks.
    usage: |
      /rcbreak [circuit-id]

      Point at a block of the circuit or enter the chip's id number as an argument if you have admin priviliges.
  rctype:
    description: General command for sending input to a chip.
    usage: |
      /rctype [...]

      Use by pointing at a block and executing the command. Each circuit class uses it differently.
      Check the relevant chip documentation for more information about usage.
  rcreset:
    description: Rescans and reactivates a circuit.
    usage: |
      /rcreset [circuit-id|all]

      Use by pointing towards the circuit or by using the chip's id number as an argument if you have op priviliges.
      Reset a circuit to scan for new i/o blocks or sign arguments and apply any changes.

      Running `/rcreset all` will reset all active circuits. Use with caution!
  rcchannels:
    description: Prints a list of all wireless broadcast channels.
    usage: |
      /rcchannels [channel-name]
      
      Use a channel name as an argument to print info about that channel.
  rcinfo:
    description: Prints a lot of useful information about a chip.
    usage: |
      /rcinfo [circuit-id]

      Use by pointing at a block of the chip you want to get info about or use the chip's id number as an argument.
  rcfixioblocks:
    description: Replace i/o blocks using incorrect materials.
    usage: |
      /rcfixioblocks [circuit-id]

      Use by pointing at the circuit you want to fix or, if you have op priviliges, use a circuit id as an argument.
      Any i/o blocks using a different block type than set in the plugin's preferences are replaced to the correct material.
  rcsel:
    description: Mass editing circuits within a selection cuboid.
    usage: |
      To define a selection type /rcsel and right-click on two opposite corners of your cuboid.
      When no selection is defined /rcsel will try to use WorldEdit's current selection.       

      When either types of selection are defined you can execute any of the following commands.

      `/rcsel activate [<input type> <output type> <interface block type>]`, `/rcsel fixioblocks`,
      `/rcsel break`, `/rcsel destroy`, `/rcsel reset` - These work the same as their single circuit counterparts.

      `/rcsel list` - Lists all circuits in the selection

      `/rcsel clear` - Clears the current selection.
  rcarg:
    description: Replace, add or clear circuit sign arguments.
    usage: |
      /rcarg <arg-number|add|clear> <arg-value>...<arg-number|add|clear> <arg-value>

      Use by pointing at the circuit you want to edit and execute the command.
      To change an existing argument value use /rcarg <arg-number> <arg-value>, where arg-number is the
      sign argument number, starting to count with 1 and arg-value is the new value for this argument.

      To add an argument as the last argument use /rcarg add <arg-value>.
      To remove an argument use /rcarg clear <arg-number>

      You can make changes to more than 1 argument by typing additional command arguments, for ex. /rcarg 1 val clear 2
      will set the 1st argument to val and remove the 2nd argument.
  rcsave:
    description: Saves all circuit data to file.
    usage: |
      Makes sure all circuits are intact and saves their current state to the plugin's circuits file.
      Should not be used unless there's a problem with the automatic data save.
  rcload:
    description: Reloads circuit data from file.
    usage: |
      This will reset any changes made to the circuits state since the last save occured.
  rchelp:
    description: Prints a list or description of all RC commands.
    usage: |
      Use /rchelp <command name> to get help about a specific command.
  rcp:
    description: Moves to a different page when run after using a command with paging.
    usage: |
      /rcp [page #|prev|next|last]
      Running the command without arguments will cause it to move to the next page or go back to the first if the last page was reached.
